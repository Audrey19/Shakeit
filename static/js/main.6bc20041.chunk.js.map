{"version":3,"sources":["logo.svg","components/Navbar/Navigation.js","components/Home/index.js","components/BarreDeRecherche/index.js","components/cocktailList/index.js","components/PageIngredient/index.js","components/Recette/retourbutton.js","components/Recette/ConnectSpotify.js","components/Recette/index.js","components/Popup/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","setState","_this2","react_default","a","createElement","className","onClick","handleClick","NavLink","to","activeClassName","Component","Home","isClicked","BarreDeRcherche","dataList","item","getDataList","bind","assertThisInitialized","param","type","fetch","then","response","json","data","drinks","console","log","prevProps","prevState","_this3","filteredList","propsName","filter","elem","toLowerCase","includes","callback","ev","target","value","_this4","onChange","placeholder","src","alt","CocktailList","cocktailName","visible","prev","cocktail","url","concat","match","params","strIngredient1","slice","map","index","key","idDrink","strDrinkThumb","strDrink","react","components_BarreDeRecherche","getCocktailName","length","loadMore","withRouter","PageIngredient","ingredientList","list","ingredients","border","Fragment","getIngredientsList","ButtonRetour","history","goBack","backButton","ConnectSpotify","name","fetchSong","newname","replace","method","headers","Accept","Content-Type","Authorization","playlists","items","external_urls","spotify","href","Recette","cocktailData","showPopup","res","newCocktail","isAlcoholic","strAlcoholic","glass","strGlass","instruction","strInstructions","image","category","strCategory","generateArray","measures","str","array","i","push","ingredietsList","retourbutton","Recette_ConnectSpotify","style","backgroundImage","togglePopup","Popup","window","open","close","handleClickyes","handleClickno","App","logo","src_components_Popup","Navbar_Navigation","Switch","Route","exact","path","component","Ingredients","Boolean","location","hostname","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bc20041.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a61a9d48.svg\";","import React, { Component } from 'react';\nimport './index.css';\nimport { NavLink } from 'react-router-dom';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n        }\n    }\n\n    handleClick() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render() {\n        return (\n            <header>\n                <div className={'menu_bar ' + (this.state.isOpen ? 'menu_bar_open' : '')} onClick={() => this.handleClick()}>\n\n                    <span className=\"icon-menu\"></span>\n                    <nav>\n                        <ul>\n                            <li><NavLink to=\"/\">HOME</NavLink></li>\n                            <li><NavLink to=\"/cocktaillist\" >COCKTAILS</NavLink></li>\n                            <li><NavLink to=\"/ingredients\" activeClassName=\"selected\">INGREDIENTS</NavLink></li>\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Navigation;","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nimport './index.css';\n\n\n\nclass Home extends Component {\n    constructor (props){\n        super(props);\n        this.state = {\n            isClicked : false,\n        }\n\n    }\n\n\n\nhandleClick = () => {\n    this.setState({\n       isClicked : !this.state.isClicked \n    })\n}\n\n  render() {\n    return (\n    <div className = \"general-background\"> \n\n    <header>  \n             <h1 className = \"home-title\"> WHAT CAN I SUGGEST YOU TONIGHT?</h1>\n       \n    </header>\n    <section className = \"home-boutons\">\n        <NavLink to=\"/ingredients\"  className=\"home-button cta\">find an ingredient</NavLink>\n        <NavLink to=\"/CocktailList\" className=\"home-button cta\" >find a cocktail</NavLink>\n    </section>\n    </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nclass BarreDeRcherche extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     dataList: [],\n     item:\"\",\n     \n    }\n    this.getDataList = this.getDataList.bind(this);\n  }\n  \n\n \n    \n    componentDidMount(){\n      const url='https://www.thecocktaildb.com/api/json/v1/1/';\n      let param = this.props.type === \"ingredient\" ? \"list.php?i=list\" : \"filter.php?c=Cocktail\" ;\n      fetch (url + param)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n         dataList : data.drinks\n\n        })\n        console.log(data.drinks)      \n      })\n  }\n    componentDidUpdate(prevProps, prevState){\n     let filteredList = []\n     let propsName = this.props.type === \"ingredient\" ? 'strIngredient1' :  'strDrink' ;\n     if(prevState.item !== this.state.item){\n        filteredList = this.state.dataList.filter(elem =>{\n          return elem[propsName].toLowerCase().includes(this.state.item.toLowerCase())\n        })\n\n        this.props.callback(filteredList);\n      }\n    }\n      \n   getDataList(ev){\n     this.setState({\n        item : ev.target.value\n     })\n   } \n\n \n\n  render() {\n\n    return (\n      \n    <div className=\"search-container\" >\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          value={this.state.item}\n          onChange={ev => this.getDataList(ev)}\n          placeholder=\"What can I serve you ?\"\n        />\n        <img\n          className=\"search-icon\"\n          src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\n          alt=\"\"\n        />\n  </div>\n\n    \n    );\n  }\n}\n\nexport default BarreDeRcherche;","import React, { Component, Fragment } from \"react\";\nimport BarreDeRecherche from '../BarreDeRecherche/index'\nimport {withRouter} from \"react-router\";\nimport { NavLink } from 'react-router-dom';\n\nimport './index.css';\n\n\n\nclass CocktailList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cocktailName: [],\n            visible: 6,\n        }\n\n    }\n\n    loadMore() {\n        this.setState((prev) => {\n            return { visible: prev.visible + 6 };\n        });\n    }\n\n\n    getCocktailName(cocktail) {\n\n        this.setState(\n            { cocktailName: cocktail }\n        )\n    }\n    \n    \n    componentDidMount() {\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${this.props.match.params.strIngredient1}`;\n       if(this.props.match.params.strIngredient1){\n        fetch(url)\n            .then(response => response.json())\n            .then(data =>{\n                this.setState({\n                    cocktailName: data.drinks\n                })\n            })\n        }\n    }\n    \n\n\n\n\n    render() {\n        const cocktail = this.state.cocktailName.slice(0, this.state.visible).map((elem, index) => (\n            <li className=\"cocktail\"\n                key={index}>\n                <div className=\"container-cocktail\">\n                <NavLink to={`/recette/${elem.idDrink}`} >\n                    <img src={elem.strDrinkThumb} alt=\"\" />\n                    <p className=\"cocktailDescription\">{elem.strDrink}</p>\n                </NavLink>\n                </div>\n            </li>\n        ))\n\n\n        return (\n            <Fragment>\n                <div className=\"page\">\n                    <h1 className=\"page-title\">SEARCH FOR YOUR COCKTAIL HERE</h1>\n                    {!this.props.match.params.strIngredient1 &&\n                        <BarreDeRecherche callback={(cocktail) => this.getCocktailName(cocktail)} type=\"cocktail\" />\n                    }<ul className=\"cocktail-list\">\n                        {cocktail}\n                    </ul>\n                    \n                    \n                    {this.state.visible < this.state.cocktailName.length &&           \n                    <button onClick={() => this.loadMore()} type=\"button\" className=\"cta load\">Load more</button>\n\n                    }\n                </div>\n\n\n            </Fragment>\n\n        );\n\n    }\n}\n\nexport default withRouter(CocktailList);","import React, { Component } from 'react';\nimport BarreDeRecherche from '../BarreDeRecherche/index';\nimport './index.css';\nimport {NavLink} from 'react-router-dom';\n\n\nclass PageIngredient extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredientList: [],\n            visible: 6,\n        }\n    }\n    loadMore() {\n        this.setState((prev) => {\n            return { visible: prev.visible + 6 };\n        });\n    }\n\n\n    getIngredientsList(list) {\n        console.log(list);\n        this.setState(\n            { ingredientList: list }\n        )\n    }\n\n    render() {\n        const ingredients = this.state.ingredientList.slice(0, this.state.visible).map((elem, index) => (\n            <li className=\"ingredient\" key={index}>\n                <div className=\"ingredient-container\">\n                    <p className=\"image-container\">\n                        <img className=\"image\" border=\"0\" src={'https://www.thecocktaildb.com/images/ingredients/' + elem.strIngredient1 + '.png'} alt=\"\" />\n                    </p>\n                    <div className=\"ingredient-content\">\n                        <p className=\"ingredient-name\">{elem.strIngredient1}</p>\n                        <NavLink to={`/cocktailList/${elem.strIngredient1}`}>\n                        <button className=\"cta\">Cocktails</button>\n                        </NavLink>\n                    </div>\n                </div>\n\n            </li>\n        ))\n        return (\n            <React.Fragment>\n                <div className=\"page\">\n                    <h1 className=\"page-title\">SEARCH YOUR INGREDIENT HERE</h1>\n                    <BarreDeRecherche callback={(list) => this.getIngredientsList(list)} type=\"ingredient\" />\n                    <ul className=\"ingredient-list\">\n                        {ingredients} \n                    </ul>\n                    \n                    {this.state.visible < this.state.ingredientList.length &&           \n                    <button onClick={() => this.loadMore()} type=\"button\" className=\"cta load\">Load more</button>\n\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default PageIngredient;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ButtonRetour extends Component {\n    backButton(){\n        this.props.history.goBack();\n    }\n    render() {\n        return (\n            <div className=\"boutonretour\" onClick={() => this.backButton()}>\n                <button className=\"fleche\">\n                    <img src=\"http://cne2017.free.fr/images/fleche.png\" alt=\"flecheretour\" className=\"retour\"/> \n                </button>\n                \n            </div>\n        )\n    }\n}\n\nexport default withRouter(ButtonRetour);","import React, { Component } from 'react';\nimport './index.css';\n\nclass ConnectSpotify extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: \"\",\n\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.name !== this.props.name) {\n            this.fetchSong()\n        }\n    }\n\n    fetchSong() {\n        let nom = this.props.name;\n        let newname = nom.replace(\"#\", \"\");\n        const source = 'https://api.spotify.com/v1/search?' + 'q=' + newname + '&type=playlist&limit=1';\n        const config = {\n            method: 'GET',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": 'Bearer ' + 'BQBjdTOCgfYVBXB8NsN5q_4ME-nROKxr8YzyyXWxW8YK44gLGLyB8b6hv57KC7RtkIff-PBQOwavYnQH7ux_8VPAiFb92wdnZ0SYYyP7SjMeyjfdLF2NGoses1NDYSnBOkuee5Mu-z6iRJu0A9sappZkEwgNJEo8p4tRc3wABntnebUdUKnJ__l9h8NBUt32dQQM1v14Gg9yzJL5xKXuM9ac-Jg'\n            }\n        }\n        fetch(source, config)\n            .then(response => response.json())\n            .then(data => {\n                if (!data.playlists.items.length > 0) {\n                    this.setState({\n                        url: 'https://open.spotify.com/playlist/37i9dQZF1DWWzhxZzVxMP3'\n                    })\n                } else {\n                    this.setState({\n                        url: data.playlists.items[0].external_urls.spotify\n                    })\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"play\">\n                <a href={this.state.url} target=\"_blank\">\n                    <button className=\"Spotify\">\n                        <p className=\"description\"> Listen to music here</p>\n                        <img src=\"https://static.thenounproject.com/png/115005-200.png\" alt=\"spotify\" className=\"spotify-logo\" />\n                    </button>\n                </a>\n            </div >\n        );\n    }\n}\n\nexport default ConnectSpotify;","import React, { Component } from 'react';\nimport Retourbutton from './retourbutton';\nimport ConnectSpotify from './ConnectSpotify';\nimport { withRouter } from \"react-router\";\n\nimport './index.css';\n\nclass Recette extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cocktailData: {\n                ingredients: []\n            },\n            showPopup: false\n        }\n    }\n\n    componentDidMount(props) {\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${this.props.match.params.idDrink || 13060}`;\n\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n          \n             let item = data.drinks[0]\n          \n            const newCocktail = {};\n            newCocktail.name = item.strDrink;\n            newCocktail.isAlcoholic = item.strAlcoholic;\n            newCocktail.glass = item.strGlass;\n            newCocktail.instruction = item.strInstructions;\n            newCocktail.image = item.strDrinkThumb;\n            newCocktail.category = item.strCategory;\n            newCocktail.ingredients = this.generateArray('strIngredient', item);\n            newCocktail.measures = this.generateArray('strMeasure', item);\n    \n            this.setState({\n                cocktailData: newCocktail\n            })\n    })\n}\n    generateArray(str, data) {\n        let array = []\n        for (let i = 1; i <= 15; i++) {\n            if (data[str + i] !== \"\" && data[str + i] !== null) {\n                array.push(data[str + i])\n            }\n        }        \n        return array;\n    }\n\n    /*popup*/\n\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup\n        });\n    }\n    /**/\n    render() {\n        const ingredietsList = this.state.cocktailData.ingredients.map((elem, i) => (\n            <li className=\"ingredient1\" key={i}>\n                <dl>\n                    <dt>{elem}</dt>\n                    <dd>{this.state.cocktailData.measures[i]}</dd>\n                </dl>\n            </li>\n        ))\n        return (\n            <div className=\"DisplayRecette\">\n                <div>\n                    <Retourbutton />\n                </div>\n                <ConnectSpotify  name={this.state.cocktailData.name}/>\n                <div className={\"container \" + (this.state.showPopup ? '' : 'closed')}>\n                    <div className=\"imgrecette\" style={{ backgroundImage: 'url(' + this.state.cocktailData.image + ')' }}>\n                    </div>\n                    <div className=\"flex-container\">\n                        <div className=\"content\">\n                            <h2 className=\"titre\">{this.state.cocktailData.name}</h2>\n                            <div className=\"description\">\n                                <p className=\"tag categorie\">{this.state.cocktailData.category}</p>\n                                <p className=\"tag alcoholic\">{this.state.cocktailData.isAlcoholic}</p>\n                            </div>\n                            <div>\n                                <h3 className=\"sous-titre\">Ingredients</h3>\n                                <ul>\n                                    {ingredietsList}\n                                </ul>\n                                <h3 className=\"sous-titre\">Recette</h3>\n                                <p className=\"information\">\n                                    {this.state.cocktailData.instruction}\n                                </p>\n                            </div>\n                            <div className=\"button-container\">\n                                <button className=\"cta\" onClick={() => this.togglePopup()}> {this.state.showPopup ? 'Close' : 'See more'} </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(Recette);\n","import React, { Component } from 'react';\nimport './index.css'\n\nclass Popup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: true,\n        }\n        /*this.handleClickno=this.handleClickno.bind(this);\n        this.handleClickyes=this.handleClickyes.bind(this);*/\n    }\n    handleClickyes() {\n        this.setState({\n            isOpen: false,\n        })\n    }\n    handleClickno() {\n        let win = window.open(\"about:blank\", \"_self\");\n        win.close();\n    }\n    render() {\n        return (\n            <div className={this.state.isOpen ? 'popup' : ' close'}>\n                <h3>Are you over 18 ?</h3>\n                <div className=\"button-groupe\">\n                    <button className=\"cta\" onClick={() => this.handleClickyes()}> yes</button>\n                    <button className=\"cta\" onClick={() => this.handleClickno()}>no</button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Popup;","import React, { Component } from 'react';\n\nimport './App.css';\nimport logo from './logo.svg';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Navigation from './components/Navbar/Navigation';\nimport Home from './components/Home/index';\nimport CocktailList from './components/cocktailList/index';\nimport Ingredients from './components/PageIngredient/index';\nimport Recette from './components/Recette/index';\nimport Popup from './components/Popup';\n\n\nclass App extends Component {\n    render() {\n        return (\n\n            <div className=\"App\">\n\n            <img src={logo} className=\"logos\" alt=\"logo\"/>  \n                <Popup />\n                <Navigation />\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/cocktailList\" component={CocktailList} />\n                    <Route exact path=\"/cocktaillist/:strIngredient1\" component={CocktailList} />\n                    <Route path=\"/ingredients\" component={Ingredients} />\n                    <Route path=\"/recette/:idDrink\" component={Recette} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    \n    <HashRouter>\n        <App />\n    </HashRouter>\n    \n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}